
@use "../base/base";
@use "../base/colours";

$tabs-max-width: calc( #{base.$unit} * 28 );
$tabs-breakpoint: 45em;

.tab-list {
  @extend %content;
  max-width: $tabs-max-width;
  margin: 0 auto;
  padding-left: unset;

  @media screen and (min-width: $tabs-breakpoint) {

    display: flex;
    flex-flow: row wrap;
    margin: calc( #{base.$unit} * 0.4 ) auto;
    border-radius: base.$roundness;
  }
}

.tab-list-item {
  margin: calc( #{base.$unit} * 0.4 ) auto;
  border-radius: base.$roundness;
  background: colours.$content-extra-light;
  list-style: none;
  &:hover,
  &:focus {
    background: colours.$content-sec-text-light;
  }
  &:hover *,
  &:focus * {
    color: colours.$content-sec-text-dark;
  }

  @media screen and (min-width: $tabs-breakpoint) {

    flex: 1 1 auto;
    margin: calc( #{base.$unit} * 0.2 );
  }
}

.tab-list-item-open {
  background: colours.$content-light;
}

.tab-list-item-open h2 {
  color: colours.$content-text-dark;
}

.tab {
  display: grid;
  grid-template-columns: 2fr 3fr;
  column-gap: calc( #{base.$unit} * 0.4 );
  padding: calc( #{base.$unit} * 0.4 );
  color: colours.$site-btn-pri-light;
  &:link,
  &:visited {
    text-decoration: unset;
    color: colours.$site-btn-pri-light;
  }
  &:hover,
  &:focus {
    outline: none;
  }
  &:active {
    font-style: italic;
  }

  @media screen and (min-width: $tabs-breakpoint) {

    display: flex;
    flex-flow: column wrap;
    justify-items: center;
  }
}

.tab .icon-container {
  justify-self: center;
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  margin: unset;
}

.tab .icon {
  align-self: center;
  width: calc( #{base.$unit} * 2.4 );

  @media screen and (min-width: $tabs-breakpoint) {

    width: calc( #{base.$unit} * 1.8 );
  }
}

.tab h2 {
  align-self: center;
  padding: unset;
  text-align: left;
  @include base.font(800, normal, 1.1, body);

  @media screen and (min-width: $tabs-breakpoint) {

    padding: calc( #{base.$unit} * 0.2 ) 0 0 0;
    @include base.font(800, normal, 0.9, body);
  }
}

.tab-panel {
  display: flex;
  flex-flow: column wrap;
  align-items: center;
  max-width: $tabs-max-width;
  padding: calc( #{base.$unit} * 0.4 );
  margin: calc( #{base.$unit} * 0.2 ) auto;
  border-radius: base.$roundness;
  background: colours.$content-bg-sec;
}

.tab-panel-closed {
  display: none;
}

.tab-panel-wrapper {
  @extend %content;
  width: 100%;
}

.button-tabs-top {
  @extend %button;
  margin: calc( #{base.$unit} * 0.4 ) auto;
}

.tab-panel p {
  margin-top: unset;
}

.tab-panel ul,
.tab-panel ol {
  list-style-position: inside;

  @media screen and (min-width: $tabs-breakpoint) {

    list-style-position: outside;
  }
}

.tab-panel-info dl,
.tab-panel-cv dl,
.tab-panel-knowledge dl,
.tab-panel-portfolio .tab-panel-wrapper,
.tab-panel-references .tab-panel-wrapper {
  display: grid;

  @media screen and (min-width: $tabs-breakpoint) {

    grid-template-columns: 20% 1fr;
    column-gap: calc( #{base.$unit} * 0.4 );
  }
}

.tab-panel-portfolio .tab-panel-wrapper,
.tab-panel-references .tab-panel-wrapper {
  grid-auto-flow: row;

  @media screen and (min-width: $tabs-breakpoint) {

    grid-auto-flow: column;
  }
}

.tab-panel dd,
.tab-panel-portfolio p,
.tab-panel-references p {
  padding: 0 0 calc( #{base.$unit} * 0.8 ) 0;

  @media screen and (min-width: $tabs-breakpoint) {

    grid-column: 2 / 3;
  }
}

.tab-panel-portfolio .tab-panel-image,
.tab-panel-references .tab-panel-image {
  width: 50%;
  margin: calc( #{base.$unit} * 0.8 ) auto;

  @media screen and (min-width: $tabs-breakpoint) {

    grid-column: 1 / 2;
    width: 100%;
    margin: unset;
  }
}

.tab-panel ul ul {
  padding: 0 0 0 calc( #{base.$unit} * 0.8 );
  color: colours.$content-running-text-light;
}

.tab-panel table {
  table-layout: fixed;
  width: 100%;
  border-collapse: collapse;
  font-variant-numeric: lining-nums tabular-nums;
}

.tab-panel th:nth-child(1) {
  width: 50%;
}

.tab-panel th:nth-child(2) {
  width: 30%;
}

.tab-panel th:nth-child(3) {
  width: 20%;
}

.tab-panel th {
  padding: calc( #{base.$unit} * 0.2 );
  background: colours.$site-page-bg;
  text-align: left;
}

.tab-panel tbody tr:nth-child(even) {
  background: colours.$site-page-bg;
}

.tab-panel td {
  padding: calc( #{base.$unit} * 0.2 );
}

.tab-panel-working-method .content-h3 {
  padding: calc( #{base.$unit} * 0.4 );
  margin: calc( #{base.$unit} * 0.4 ) auto;
  border-radius: base.$roundness;
  background: colours.$content-bg-sec;
}

.tab-panel-working-method h3 {
  text-align: center;
}

.tab-panel-working-method .content-h3 > dl {

  @media screen and (min-width: $tabs-breakpoint) {

    display: grid;
    grid-template-columns: 15% 1fr;
    column-gap: calc( #{base.$unit} * 0.4 );
  }
}

.tab-panel-working-method .content-h3 > dl > dt {
  text-align: center;

  @media screen and (min-width: $tabs-breakpoint) {

    text-align: unset;
  }
}

.tab-panel-working-method .content-h3 > dl > dd {

  @media screen and (min-width: $tabs-breakpoint) {

    grid-column: 2 / 3;
  }
}

.tab-panel-working-method .content-h4 {
  margin: calc( #{base.$unit} * 0.4 ) auto;
  border-radius: base.$roundness;

  @media screen and (min-width: $tabs-breakpoint) {

    padding: calc( #{base.$unit} * 0.4 );
    background: colours.$content-bg-text;
  }
}

.tab-panel-working-method .icon-container {
  display: flex;
  justify-content: space-around;
  width: calc( #{base.$unit} * 3.5 );
  margin:
    calc( #{base.$unit} * 1.4 )
    auto
    calc( #{base.$unit} * 0.7 )
    auto;

  @media screen and (min-width: $tabs-breakpoint) {

    grid-row: span 2;
    align-self: start;
    justify-content: flex-end;
    width: 100%;
    margin: unset;
  }
}

.tab-panel-working-method .icon-benefits {
  width: calc( #{base.$unit} * 2.1 );

  @media screen and (min-width: $tabs-breakpoint) {
    width: calc( #{base.$unit} * 1.4 );
  }
}
